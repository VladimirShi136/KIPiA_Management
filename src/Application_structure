src/
└── main/
    ├── java/
    │   ├── com/kipia/management/kipia_management
    │   │   ├── Main.java           # Главный класс приложения
    │   │   │
    │   │   ├── controllers/        # Контроллеры для JavaFX
    │   │   │   ├── cell/            # Классы для работы с ячейками таблиц
    │   │   │   │   ├── table_cell/     # Работа с ячейками обычных таблиц
    │   │   │   │   │   ├── AbstractValidatingCell.java     # Абстрактный класс для валидации
    │   │   │   │   │   ├── ValidatingDoubleCell.java     # Класс для валидации ячейки с дробным значением
    │   │   │   │   │   └── ValidatingIntegerCell.java    # Класс для валидации ячейки с целым значением
    │   │   │   │   ├── tree_table_cell/  # Работа с ячейками таблицы древовидной структуры
    │   │   │   │   │    ├── AbstractValidatingTreeCell.java     # Абстрактный класс для валидации
    │   │   │   │   │    ├── ValidatingDoubleTreeCell.java     # Класс для валидации ячейки с дробным значением
    │   │   │   │   │    └── ValidatingIntegerTreeCell.java    # Класс для валидации ячейки с целым значением
    │   │   │   │   │
    │   │   │   │   ├── ValidatingCellEditor.java     # Класс для инкапсуляции общей логики редактирования ячеек таблиц.
    │   │   │   │   └── ValidationCallback.java     # Интерфейс для обратного вызова валидации и commit ввода.
    │   │   │   │
    │   │   │   │
    │   │   │   ├── AddDeviceController.java   # Контроллер для формы добавления нового прибора.
    │   │   │   ├── MainController.java     # Главный контроллер – отвечает за навигацию
    │   │   │   ├── DevicesTableController.java   # Контроллер для работы с таблицей приборов
    │   │   │   ├── DevicesGroupedController.java   # Контроллер для работы с таблицей приборов (группированный вид)
    │   │   │   ├── SchemeEditorController.java    # Контроллер для работы с схемой
    │   │   │   └── ReportsController.java    # Контроллер для работы с отчетами
    │   │   │
    │   │   ├── models/   # Модели данных (Device и т.д.)
    │   │   │   ├── DeviceLocation.java       # Класс представляет модель данных привязки прибора к схеме
    │   │   │   ├── Scheme.java         # Класс представляет модель данных схемы/карты в системе.
    │   │   │   └── Device.java       # Класс для создания объектов "приборов"
    │   │   │
    │   │   ├── services/  # Сервисы
    │   │   │   ├── DatabaseService.java       # Класс для работы с БД
    │   │   │   ├── DeviceDAO.java        # Класс для выполнения действий с БД (CRUD операции)
    │   │   │   ├── DeviceReportService.java      # Класс-сервис для работы с отчетами
    │   │   │   └── ExcelExportReportsService.java      # Класс для работы с экспортом данных из отчетов
    │   │   └── utils/       # Пакет с утилитами
    │   │       ├── ExcelImportExportUtil0.java    # Класс для работы с импортом и экспортом данных из таблицы
    │   │       └── StyleUtils.java     # Класс с утилитами для работы со стилями CSS
    │   └── module-info.java      # Файл взаимодействия модулей
    │
    ├── resources/
    │   ├── images/     # Файлы иконок и других изображений
    │   │   └── ...........
    │   │
    │   ├── styles/  # Файлы стилей CSS
    │   │   ├── dark-theme.css       # Темная тема
    │   │   └── light-theme.css       # Светлая тема (По умолчанию)
    │   │
    │   └── views/  # FXML файлы интерфейса
    │       ├── add-device-form.fxml    # Экран с формой добавления приборов
    │       ├── devices.fxml       # Экран с таблицей приборов
    │       ├── devices_grouped.fxml   # Экран с таблицей приборов (группированный по месту установки)
    │       ├── main.fxml        # Начальный экран при запуске
    │       ├── reports.fxml      # Экран с просмотром отчетов
    │       └── scheme-editor.fxml    # Экран с редактором схемы
    │
    │
    └── Application_structure       # Файл с описанием структуры проекта


